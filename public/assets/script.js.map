{"version":3,"sources":["../../src/script/script.js"],"names":["vm","Vue","el","data","count","methods","countUp","changeRotateSpeed","vm_stop","hsStop","Speed_0","scene","THREE","Scene","box","controls","renderer","camera","model","model2","model3","rotate_speed","radian","geometry","material","renderHandSpinner","light","ambient","gridHelper","axisHelper","lightHelper","width","height","modelPath","Mesh","BoxGeometry","MeshLambertMaterial","color","position","set","DirectionalLight","add","AmbientLight","PerspectiveCamera","lookAt","GridHelper","AxisHelper","DirectionalLightHelper","OrbitControls","autoRotate","autoRotateSpeed","WebGLRenderer","antialias","setSize","setClearColor","setPixelRatio","window","devicePixelRatio","document","getElementById","appendChild","domElement","loader","JSONLoader","load","geo","mat","phongMat","MeshPhongMaterial","phongMat2","phongMat3","scale","randColor","Math","random","Color","randColor2","randColor3","render","addSpinner","randX","randY","randZ","size","requestAnimationFrame","rotation","y","sin","update","console","log"],"mappings":";;AAAA,IAAIA,KAAK,IAAIC,GAAJ,CAAQ;AACfC,MAAI,YADW;AAEfC,QAAM;AACJC,WAAO;AADH,GAFS;AAKfC,WAAS;AACPC,aAAS,mBAAW;AACZ,WAAKF,KAAL;AACAG;AACL;AAJI;AALM,CAAR,CAAT;;AAaA,IAAIC,UAAU,IAAIP,GAAJ,CAAQ;AACpBC,MAAI,SADgB;AAEpBG,WAAS;AACPI,YAAQ,kBAAW;AACXC;AACP;AAHM;AAFW,CAAR,CAAd;AAQA,IAAIC,QAAQ,IAAIC,MAAMC,KAAV,EAAZ;AACA,IAAIC,GAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,MAAJ;AACA,IAAIC,QAAQ,EAAZ;AACA,IAAIC,SAAS,EAAb;AACA,IAAIC,SAAS,EAAb;AACA,IAAIC,eAAe,IAAnB;AACA,IAAIC,SAAS,CAAb;AACA,IAAIC,QAAJ;AACA,IAAIC,QAAJ;;AAEA,SAASC,iBAAT,GAA8B;AAC5B;;AACA,MAAIC,cAAJ;AACA,MAAIC,gBAAJ;AACA,MAAIC,mBAAJ;AACD,MAAIC,mBAAJ;AACC,MAAIC,oBAAJ;AACA,MAAIC,QAAQ,GAAZ;AACA,MAAIC,SAAS,GAAb;AACD,MAAIC,kBAAJ;;AAECnB,QAAM,IAAIF,MAAMsB,IAAV,CACJ,IAAItB,MAAMuB,WAAV,CAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,CADI,EAEJ,IAAIvB,MAAMwB,mBAAV,CAA8B,EAAEC,OAAO,QAAT,EAA9B,CAFI,CAAN;AAIAvB,MAAIwB,QAAJ,CAAaC,GAAb,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA;;AAEA;AACAb,UAAQ,IAAId,MAAM4B,gBAAV,CAA2B,QAA3B,EAAqC,CAArC,CAAR;AACAd,QAAMY,QAAN,CAAeC,GAAf,CAAmB,CAAnB,EAAsB,GAAtB,EAA2B,EAA3B;AACA5B,QAAM8B,GAAN,CAAUf,KAAV;;AAEAC,YAAU,IAAIf,MAAM8B,YAAV,CAAuB,QAAvB,CAAV;AACA/B,QAAM8B,GAAN,CAAUd,OAAV;;AAED;AACCV,WAAS,IAAIL,MAAM+B,iBAAV,CAA4B,EAA5B,EAAgCZ,QAAQC,MAAxC,EAAgD,CAAhD,EAAoD,IAApD,CAAT;AACAf,SAAOqB,QAAP,CAAgBC,GAAhB,CAAoB,GAApB,EAAyB,GAAzB,EAA8B,GAA9B;AACAtB,SAAO2B,MAAP,CAAcjC,MAAM2B,QAApB;;AAEA;AACAV,eAAa,IAAIhB,MAAMiC,UAAV,CAAqB,GAArB,EAA0B,EAA1B,CAAb;AACA;AACAhB,eAAa,IAAIjB,MAAMkC,UAAV,CAAqB,IAArB,CAAb;AACA;AACAhB,gBAAc,IAAIlB,MAAMmC,sBAAV,CAAiCrB,KAAjC,EAAyC,EAAzC,CAAd;AACA;;AAEA;AACAX,aAAW,IAAIH,MAAMoC,aAAV,CAAwB/B,MAAxB,CAAX;AACAF,WAASkC,UAAT,GAAsB,IAAtB;AACAlC,WAASmC,eAAT,GAA2B,CAA3B;;AAEA;AACAlC,aAAW,IAAIJ,MAAMuC,aAAV,CAAwB,EAAEC,WAAY,IAAd,EAAxB,CAAX;AACApC,WAASqC,OAAT,CAAiBtB,KAAjB,EAAwBC,MAAxB;AACAhB,WAASsC,aAAT,CAAuB,QAAvB;AACAtC,WAASuC,aAAT,CAAuBC,OAAOC,gBAA9B;AACAC,WAASC,cAAT,CAAwB,OAAxB,EAAiCC,WAAjC,CAA6C5C,SAAS6C,UAAtD;;AAED;AACA;AACC;AACA5B,cAAY,mCAAZ;AACD;;AAEC,MAAI6B,SAAS,IAAIlD,MAAMmD,UAAV,EAAb;AACAD,SAAOE,IAAP,CAAY/B,SAAZ,EAAuB,UAASgC,GAAT,EAAcC,GAAd,EAAmB;AACxC,QAAIC,WAAW,IAAIvD,MAAMwD,iBAAV,CAA4BF,GAA5B,CAAf;AACA,QAAIG,YAAY,IAAIzD,MAAMwD,iBAAV,CAA4BF,GAA5B,CAAhB;AACA,QAAII,YAAY,IAAI1D,MAAMwD,iBAAV,CAA4BF,GAA5B,CAAhB;AACA;AACA;AACD;AACC3C,eAAW0C,GAAX;AACAzC,eAAW0C,GAAX;;AAEAhD,YAAQ,IAAIN,MAAMsB,IAAV,CAAe+B,GAAf,EAAoBE,QAApB,CAAR;AACAjD,UAAMoB,QAAN,CAAeC,GAAf,CAAmB,CAAnB,EAAsB,EAAtB,EAA0B,CAA1B;AACArB,UAAMqD,KAAN,CAAYhC,GAAZ,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB;AACA,QAAIiC,YAAYC,KAAKC,MAAL,KAAgB,QAAhC;AACAxD,UAAMM,QAAN,CAAea,KAAf,GAAuB,IAAIzB,MAAM+D,KAAV,CAAgBH,SAAhB,CAAvB;AACA7D,UAAM8B,GAAN,CAAUvB,KAAV;;AAEAC,aAAS,IAAIP,MAAMsB,IAAV,CAAe+B,GAAf,EAAoBI,SAApB,CAAT;AACAlD,WAAOmB,QAAP,CAAgBC,GAAhB,CAAoB,EAApB,EAAwB,CAAxB,EAA2B,CAA3B;AACApB,WAAOoD,KAAP,CAAahC,GAAb,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACD,QAAIqC,aAAaH,KAAKC,MAAL,KAAgB,QAAjC;AACCvD,WAAOK,QAAP,CAAgBa,KAAhB,GAAwB,IAAIzB,MAAM+D,KAAV,CAAgBC,UAAhB,CAAxB;AACAjE,UAAM8B,GAAN,CAAUtB,MAAV;;AAEAC,aAAS,IAAIR,MAAMsB,IAAV,CAAe+B,GAAf,EAAoBK,SAApB,CAAT;AACAlD,WAAOkB,QAAP,CAAgBC,GAAhB,CAAoB,CAAC,EAArB,EAAyB,CAAzB,EAA4B,CAA5B;AACAnB,WAAOmD,KAAP,CAAahC,GAAb,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACD,QAAIsC,aAAaJ,KAAKC,MAAL,KAAgB,QAAjC;AACAtD,WAAOI,QAAP,CAAgBa,KAAhB,GAAwB,IAAIzB,MAAM+D,KAAV,CAAgBE,UAAhB,CAAxB;AACClE,UAAM8B,GAAN,CAAUrB,MAAV;AACA;AACA;AACA;AACA;AACA0D;AACD,GAnCD;AAoCD;;AAED,SAASC,UAAT,GAAuB;AACrB,MAAIZ,WAAW,IAAIvD,MAAMwD,iBAAV,CAA4B5C,QAA5B,CAAf;AACAN,UAAQ,IAAIN,MAAMsB,IAAV,CAAeX,QAAf,EAAyB4C,QAAzB,CAAR;AACD,MAAIa,QAAQ,MAAMP,KAAKC,MAAL,EAAlB;AACA,MAAIO,QAAQ,MAAMR,KAAKC,MAAL,EAAlB;AACA,MAAIQ,QAAQ,MAAMT,KAAKC,MAAL,EAAlB;;AAEC,MAAIS,OAAOV,KAAKC,MAAL,EAAX;AACDxD,QAAMqD,KAAN,CAAYhC,GAAZ,CAAgB4C,IAAhB,EAAsBA,IAAtB,EAA4BA,IAA5B;AACCjE,QAAMoB,QAAN,CAAeC,GAAf,CAAmByC,KAAnB,EAA0BC,KAA1B,EAAiCC,KAAjC;AACD,MAAIV,YAAYC,KAAKC,MAAL,KAAgB,QAAhC;AACAxD,QAAMM,QAAN,CAAea,KAAf,GAAuB,IAAIzB,MAAM+D,KAAV,CAAgBH,SAAhB,CAAvB;AACA7D,QAAM8B,GAAN,CAAUvB,KAAV;AACA;;AAED,SAAS4D,MAAT,GAAmB;AAClB;AACCM,wBAAsBN,MAAtB;AACA5D,QAAMmE,QAAN,CAAeC,CAAf,IAAoBjE,YAApB;AACAF,SAAOkE,QAAP,CAAgBC,CAAhB,IAAqBjE,YAArB;AACAD,SAAOiE,QAAP,CAAgBC,CAAhB,IAAqBjE,YAArB;AACAC,YAAU,IAAV;AACA;AACA;AACAJ,QAAMoB,QAAN,CAAegD,CAAf,GAAmBb,KAAKc,GAAL,CAASjE,MAAT,IAAiB,EAApC;AACAH,SAAOmB,QAAP,CAAgBgD,CAAhB,GAAoBb,KAAKc,GAAL,CAASjE,MAAT,IAAiB,EAAjB,GAAsB,GAA1C;AACAF,SAAOkB,QAAP,CAAgBgD,CAAhB,GAAoBb,KAAKc,GAAL,CAASjE,MAAT,IAAiB,EAAjB,GAAsB,GAA1C;AACA;AACA;AACAP,WAASyE,MAAT;AACAxE,WAAS8D,MAAT,CAAgBnE,KAAhB,EAAuBM,MAAvB;AACD;;AAED,SAASV,iBAAT,GAA8B;AAC5B;AACDW,QAAMmE,QAAN,CAAeC,CAAf,GAAmB,MAAItF,GAAGI,KAA1B;AACCiB,kBAAgBrB,GAAGI,KAAH,GAAS,IAAzB;AACAqF,UAAQC,GAAR,CAAY1F,GAAGI,KAAf;AACA;AACD;;AAED,SAASM,OAAT,GAAoB;AAClBV,KAAGI,KAAH,GAAW,CAAX;AACAiB,iBAAe,CAAf;AACA0D;AACD;;AAEDtD","file":"script.js","sourcesContent":["var vm = new Vue({\n  el: '#mycounter',\n  data: {\n    count: 0\n  },\n  methods: {\n    countUp: function() {\n            this.count++; \n            changeRotateSpeed (); \n      }\n  }\n});\n  \nvar vm_stop = new Vue({\n  el: '#mystop',\n  methods: {\n    hsStop: function() {\n            Speed_0(); \n    }\n  }\n});\nvar scene = new THREE.Scene();\nvar box;\nvar controls;\nvar renderer;\nvar camera;\nvar model = {};\nvar model2 = {};\nvar model3 = {};\nvar rotate_speed = 0.05;\nvar radian = 0;\nvar geometry;\nvar material;\n\nfunction renderHandSpinner () {\n  'use strict';\n  let light;\n  let ambient;\n  let gridHelper;\n\tlet axisHelper;\n  let lightHelper;\n  let width = 800;\n  let height = 800;\n\tlet modelPath ;\n\n  box = new THREE.Mesh(\n   \tnew THREE.BoxGeometry(50, 50, 50),\n    new THREE.MeshLambertMaterial({ color: 0xff0000 })\n  );\n  box.position.set(0, 0, 0);\n  //scene.add(box);\n\n  //light\n  light = new THREE.DirectionalLight(0xffffff, 1);\n  light.position.set(0, 200, 80);\n  scene.add(light);\n\n  ambient = new THREE.AmbientLight(0x404040);\n  scene.add(ambient);\n\n\t//camera\n  camera = new THREE.PerspectiveCamera(45, width /　height, 1 , 1000);\n  camera.position.set(200, 300, 150);\n  camera.lookAt(scene.position);\n\n  // helper\n  gridHelper = new THREE.GridHelper(200, 50);\n  //scene.add(gridHelper);\n  axisHelper = new THREE.AxisHelper(1000);\n  //scene.add(axisHelper);\n  lightHelper = new THREE.DirectionalLightHelper(light , 20)\n  //scene.add(lightHelper);\n\n  //controls\n  controls = new THREE.OrbitControls(camera);\n  controls.autoRotate = true;\n  controls.autoRotateSpeed = 0;\n\n  // renderer\n  renderer = new THREE.WebGLRenderer({ antialias : true });\n  renderer.setSize(width, height);\n  renderer.setClearColor(0xefefef);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  document.getElementById('stage').appendChild(renderer.domElement);\n\n\t//modelPath = 'src/bear.json';\n\t//modelPath = 'src/handspiner_3d.json';\n  //modelPath = '../src/data/handspiner_3d_geo.json';\n  modelPath = './src/data/handspiner_3d_geo.json';\n\t//modelPath = '/Users/yoshimurahiroyuki/workspace/threejs/src/handspiner.json';\n\n  let loader = new THREE.JSONLoader();　　\n  loader.load(modelPath, function(geo, mat) {　　　\n    let phongMat = new THREE.MeshPhongMaterial(mat);\n    let phongMat2 = new THREE.MeshPhongMaterial(mat);\n    let phongMat3 = new THREE.MeshPhongMaterial(mat);\n    //for (let mt of faceMat.materials) {\n    //  mt.color = new THREE.Color(0xffcc88);\n  \t//}\n    geometry = geo;\n    material = mat;\n\n    model = new THREE.Mesh(geo, phongMat);\n    model.position.set(0, 20, 0);　　　\n    model.scale.set(1, 1, 1);　　　\n    let randColor = Math.random() * 0xffffff ;　　　\n    model.material.color = new THREE.Color(randColor);\n    scene.add(model);　　　\n  \n    model2 = new THREE.Mesh(geo, phongMat2);\n    model2.position.set(30, 0, 0);　　　\n    model2.scale.set(1, 1, 1);\n  \tlet randColor2 = Math.random() * 0xffffff ;　　　\n    model2.material.color = new THREE.Color(randColor2);\n    scene.add(model2);　\n  \n    model3 = new THREE.Mesh(geo, phongMat3);\n    model3.position.set(-30, 0, 0);　　　\n   \tmodel3.scale.set(1, 1, 1);　　　\n  \tlet randColor3 = Math.random() * 0xffffff ;　　　\n  \tmodel3.material.color = new THREE.Color(randColor3);\n    scene.add(model3);　\n    //requestAnimationFrame(rendering, renderer.domElement);　\n    //renderer.render(scene, camera);\n    //console.log(model);\n    //model.rotation.x = 1;\n    render();\n  });　\n}\n\nfunction addSpinner () {\n  let phongMat = new THREE.MeshPhongMaterial(material);\n  model = new THREE.Mesh(geometry, phongMat);\n\tlet randX = 800 * Math.random();\n\tlet randY = 800 * Math.random();\n\tlet randZ = 800 * Math.random();\n\t\n  let size = Math.random();\n\tmodel.scale.set(size, size, size);　　　\n  model.position.set(randX, randY, randZ);\n\tlet randColor = Math.random() * 0xffffff;　　　\n\tmodel.material.color = new THREE.Color(randColor);\n\tscene.add(model);　\n}\n\nfunction render () {\n // ここのコメントアウトを外すと表示される\n  requestAnimationFrame(render);\n  model.rotation.y += rotate_speed;\n  model2.rotation.y += rotate_speed;\n  model3.rotation.y += rotate_speed;\n  radian += 0.02;\n  //console.log(radian);\n  //model.position.y = Math.sin(radian) ;\n  model.position.y = Math.sin(radian)*40 ;\n  model2.position.y = Math.sin(radian)*40 + 100 ;\n  model3.position.y = Math.sin(radian)*40 - 100 ;\n  // model.position.y = Math.sin(radian)  ;\n  // model.y += rotate_speed;\n  controls.update();\n  renderer.render(scene, camera);\n}\n\nfunction changeRotateSpeed () {\n  //controls.autoRotateSpeed = vm.count*10;\n\tmodel.rotation.y = 1.8*vm.count;\n  rotate_speed += vm.count*0.01;\n  console.log(vm.count);\n  //requestAnimationFrame(render);\n}\n        \nfunction Speed_0 () {\n  vm.count = 0;\n  rotate_speed = 0;\n \taddSpinner();\n}\n\nrenderHandSpinner();\n\n"]}