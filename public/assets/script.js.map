{"version":3,"sources":["../../src/script/script.js"],"names":["vm","Vue","el","data","count","methods","countUp","changeRotateSpeed","vm_stop","hsStop","Speed_0","howManySpinners","scene","THREE","Scene","box","controls","renderer","camera","model","model2","model3","rotate_speed","r_radian","c_radian","geometry","material","hs_color","db","firebase","database","fbColor","ref","console","log","changeData","document","getElementById","value","set","on","snapshot","innerText","val","color","i","Color","renderHandSpinner","light","ambient","gridHelper","axisHelper","lightHelp","width","height","modelPath","DirectionalLight","position","add","AmbientLight","PerspectiveCamera","lookAt","OrbitControls","autoRotate","autoRotateSpeed","WebGLRenderer","antialias","setSize","setClearColor","setPixelRatio","window","devicePixelRatio","appendChild","domElement","loader","JSONLoader","load","geo","mat","phongMat","MeshPhongMaterial","Mesh","randX","Math","random","randY","randZ","scale","randColor","render","addSpinner","size","requestAnimationFrame","rotation","y","sin","cameraZ","update"],"mappings":"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","file":"script.js","sourcesContent":["var vm = new Vue({\n  el: '#mycounter',\n  data: {\n    count: 0\n  },\n  methods: {\n    countUp: function() {\n            this.count++;\n            changeRotateSpeed ();\n      }\n  }\n});\n\nvar vm_stop = new Vue({\n  el: '#mystop',\n  methods: {\n    hsStop: function() {\n            Speed_0();\n    }\n  }\n});\n\nlet howManySpinners = 200;\nlet scene = new THREE.Scene();\nlet box;\nlet controls;\nlet renderer;\nlet camera;\nlet model = [];\n//let model = {};\nlet model2 = {};\nlet model3 = {};\nlet rotate_speed = 0.05;\nlet r_radian = 0;\nlet c_radian = 0;\nlet geometry;\nlet material;\nvar hs_color;\n\n////////////////////////////\n// firebase 処理\n/////////////////////////\n\n\nvar db = firebase.database();\nvar fbColor = db.ref(\"/\");\n//\nconsole.log(fbColor);\n\n//\nfunction changeData() {\n\tvar hs_color = document.getElementById(\"my_text\").value;\n\tfbColor.set({\"color\": hs_color});\n\n\t// fbColor.on(\"value\", function(snapshot) {\n\t//document.getElementById(\"hsColor\").innerText =  //snapshot.val().text;\n\t// \ths_color = snapshot.val().text;\n\t// \tconsole.log(hs_color);\n\t// \tvar text = document.getElementById(\"my_text\").value;\n\t//   fbColor.set({\"color\": hs_color});\n\t// });\n\n\n\t// console.log(return_val);\n\n\t// for (let i=0 ; i < howManySpinners; i++) {\n\t//   \tmodel[i].material.color = new THREE.Color(hs_color);\n\t// }\n}\n\nfbColor.on(\"value\", function(snapshot) {\n  document.getElementById(\"hsColor\").innerText = snapshot.val().color;\n\tconsole.log(snapshot.val().color);\n \ths_color = snapshot.val().color;\n\t// fbColor.set({\"color\": hs_color});\n\n\tfor (let i=0 ; i < howManySpinners; i++) {\n\t\tmodel[i].material.color = new THREE.Color(hs_color);\n\t}\n\n});\n\n\n//////////////////////////\n//\n///////////////////////////\n\nfunction renderHandSpinner () {\n  'use strict';\n  let light;\n  let ambient;\n  let gridHelper;\n\tlet axisHelper;\n  let lightHelp;\n  let width = 1200;\n  let height = 1200;\n\tlet modelPath ;\n\n   //light\n  light = new THREE.DirectionalLight(0xffffff, 1);\n  light.position.set(0, 200, 80);\n  scene.add(light);\n  ambient = new THREE.AmbientLight(0x404040);\n  scene.add(ambient);\n\n\t//camera\n  camera = new THREE.PerspectiveCamera(45, width /　height, 1 , 1000);\n  camera.position.set(0, 400, 300);\n  camera.lookAt(scene.position);\n\n  // helper 現在は非表示\n  //gridHelper = new THREE.GridHelper(200, 50);\n  //scene.add(gridHelper);\n  //axisHelper = new THREE.AxisHelper(1000);\n  //scene.add(axisHelper);\n  //lightHelper = new THREE.DirectionalLightHelper(light , 20)\n  //scene.add(lightHelper);\n\n  //controls\n  controls = new THREE.OrbitControls(camera);\n  //cameraの自動回転\n  controls.autoRotate = true;\n  controls.autoRotateSpeed = 1.5;\n\n  // renderer\n  renderer = new THREE.WebGLRenderer({ antialias: true });\n  renderer.setSize(width, height);\n  renderer.setClearColor(0xffffff);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  document.getElementById('stage').appendChild(renderer.domElement);\n\n\t//modelPath = 'src/bear.json';\n\t//modelPath = 'src/handspiner_3d.json';\n  //modelPath = '../src/data/handspiner_3d_geo.json';\n  //modelPath = './src/data/handspiner_3d_geo.json';\n  modelPath = './data/handspiner_3d_geo.json';\n\t//modelPath = '/Users/yoshimurahiroyuki/workspace/threejs/src/handspiner.json';\n\n  let loader = new THREE.JSONLoader();　　\n  loader.load(modelPath, function(geo, mat) {　　　\n    //let phongMat = new THREE.MeshPhongMaterial(mat);\n    //let phongMat2 = new THREE.MeshPhongMaterial(mat);\n    //let phongMat3 = new THREE.MeshPhongMaterial(mat);\n    //for (let mt of faceMat.materials) {\n    //  mt.color = new THREE.Color(0xffcc88);\n  \t//}\n    geometry = geo;\n    material = mat;\n\n\t\tfor (let i=0; i < howManySpinners; i++ ) {\n      let phongMat = new THREE.MeshPhongMaterial(mat);\n      model[i] = new THREE.Mesh(geo, phongMat);\n\n\t\t\tlet randX = 600 * Math.random()-300;\n\t\t\tlet randY = 600 * Math.random()-300;\n\t\t\tlet randZ = 400 * Math.random()-200;\n\n      if (i==0) {\n\t\t\t\tmodel[i].position.set(0, 20, 0);\n\t\t\t} else {\n\t\t\t\tmodel[i].position.set(randX, randY, randZ);\n\t\t\t}　　\n\n    \tmodel[i].scale.set(0.5, 0.5, 0.5);　\n    \tlet randColor = Math.random() * 0xffffff ;\n\t\t\tmodel[i].material.color = new THREE.Color(hs_color);　　　\n    \t//model[i].material.color = new THREE.Color(randColor);\n    \tscene.add(model[i]);　　　\n\t\t}\n    render();\n  });　\n}\n\nfunction addSpinner () {\n  let phongMat = new THREE.MeshPhongMaterial(material);\n  model = new THREE.Mesh(geometry, phongMat);\n\tlet randX = 800 * Math.random();\n\tlet randY = 800 * Math.random();\n\tlet randZ = 800 * Math.random();\n\n  let size = Math.random();\n\tmodel.scale.set(size, size, size);　　　\n  model.position.set(randX, randY, randZ);\n\tlet randColor = Math.random() * 0xffffff;　　　\n\t//model.material.color = new THREE.Color(randColor);\n\tmodel.material.color = new THREE.Color(hs_color);\n\tconsole.log(hs_color)\n\tscene.add(model);　\n}\n\nfunction render () {\n\n  requestAnimationFrame(render);\n  r_radian += 0.01;\n\n\tfor (let i=0; i < howManySpinners; i++ ) {\n  \tmodel[i].rotation.y += rotate_speed;\n    model[i].position.y += (Math.sin(r_radian) - Math.sin(r_radian-0.01))*150 ;\n\t}\n\n\tc_radian += 0.007;\n  let cameraZ = 150 * (Math.sin(c_radian)) +150;\n // let cameraZ = 0;\n\tcamera.position.set(0, 600, cameraZ);\n\n  controls.update();\n  renderer.render(scene, camera);\n}\n\nfunction changeRotateSpeed () {\n  //controls.autoRotateSpeed = vm.count*10;\n \trotate_speed += vm.count*0.01;\n  for (let i=0 ; i < howManySpinners; i++) {\n\t\t// model[i].material.color = new THREE.Color(hs_color);\n\t\tmodel[i].rotation.y = 1.8*vm.count;\n  }\n\tconsole.log(hs_color);\n}\n\nfunction Speed_0 () {\n  vm.count = 0;\n  rotate_speed = 0;\n \t//addSpinner();\n}\n\nrenderHandSpinner();\n"]}